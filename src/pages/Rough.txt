 //ctrl + shift + g its for git stged for all files

// have to import classNames package className={classNames(btnStyles, styles.btnStyles)} 

 {/* <div className="filterBox">
        <div className="filterTitle">
          <span>State</span>
          <span>ðŸ§¹</span>
        </div>

        <div className="filterSearch">
          <VscSearch size={20} />
          <input type="text" size="10" placeholder="Search.." />
        </div>

        <div className="filterCheck">
          <input type="checkbox" />
          <input type="checkbox" />
        </div>
      </div> */}

      {/* <FlipCard
            frontContent={
              <div>
                <div className="num">0.0 </div>
                <div> Avg Motor Temp (&deg;C)</div>
              </div>
            }
            backContent={<p>Back Content</p>}
          />

          <FlipCard
            frontContent={<h2>Front Content</h2>}
            backContent={<p>Back Content</p>}
          />

          <FlipCard
            frontContent={<h2>Front Content</h2>}
            backContent={<p>Back Content</p>}
          />
          <FlipCard
            frontContent={<h2>Front Content</h2>}
            backContent={<p>Back Content</p>}
          />
          <FlipCard
            frontContent={<h2>Front Content</h2>}
            backContent={<p>Back Content</p>}
          />
          <FlipCard
            frontContent={<h2>Front Content</h2>}
            backContent={<p>Back Content</p>}
          /> */}


          {/* <div className="filterContainer">
        {Object.keys(filterData).map((tab, index) => (
          <div
            key={index}
            className="filter"
            onClick={() => handleOpenModal(tab)}
          >
            <span>{tab.charAt(0).toUpperCase() + tab.slice(1)}</span>

            <span>
              <FilterAltIcon />
            </span>
          </div>
        ))}
      </div> */}

  const Navbar = () => {
    
  const location = useLocation();

  return (
    <nav>
      <ul>
        <li className={location.pathname === '/' ? 'active' : ''}>
          <Link to="/">Home</Link>
        </li>
        <li className={location.pathname === '/about' ? 'active' : ''}>
          <Link to="/about">About</Link>
        </li>
        {/* Add more Link items for other routes */}
      </ul>
    </nav>
  );
};

export default Navbar;


// for active button 

import React, { useState } from 'react';
import { useHistory } from 'react-router-dom';

const ButtonComponent = () => {
  const history = useHistory();
  const [activeButton, setActiveButton] = useState('');

  const redirectToVehicle = () => {
    history.push('/vehicle');
    setActiveButton('vehicle');
  };

  const redirectToBms = () => {
    history.push('/bms');
    setActiveButton('bms');
  };

  const redirectToVcu = () => {
    history.push('/vcu');
    setActiveButton('vcu');
  };

  return (
    <div className="btnContainer">
      <button
        className={activeButton === 'vehicle' ? 'activeButton' : ''}
        onClick={redirectToVehicle}
      >
        Vehicle Details
      </button>
      <button
        className={activeButton === 'bms' ? 'activeButton' : ''}
        onClick={redirectToBms}
      >
        BMS Details
      </button>
      <button
        className={activeButton === 'vcu' ? 'activeButton' : ''}
        onClick={redirectToVcu}
      >
        VCU Details
      </button>
    </div>
  );
};

export default ButtonComponent;


//form Handling 

import React, { useState } from "react";
import { signInWithEmailAndPassword, sig } from "firebase/auth";
// import "./login.css";
import "../loginPage/myLogin.css"
import { useNavigate } from "react-router-dom";
import { auth } from "../../config/firebase";

const LoginPage = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    email: "",
    password: "",
  });
  const [errors, setErrors] = useState({
    email: "",
    password: "",
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };
  const isValidEmail = (email) => {
    // Regular expression for basic email validation
    const emailRegex = /^\S+@\S+\.\S+$/;
    return emailRegex.test(email);
  };

  const isValidPassword = (password) => {
    // Regular expressions for password validation
    const symbolRegex = /[!@#$%^&*(),.?":{}|<>]/;
    const numberRegex = /[0-9]/;
    const upperCaseRegex = /[A-Z]/;
    const lowerCaseRegex = /[a-z]/;
    return (
      password.length >= 8 &&
      symbolRegex.test(password) &&
      numberRegex.test(password) &&
      upperCaseRegex.test(password) &&
      lowerCaseRegex.test(password)
    );
  };

  const validateForm = () => {
    let newErrors = {};
    if (!formData.email) {
      newErrors.email = "Email is required";
    } else if (!isValidEmail(formData.email)) {
      newErrors.email = "Invalid email format";
    }
    if (!formData.password) {
      newErrors.password = "Password is required";
    } else if (!isValidPassword(formData.password)) {
      newErrors.password =
        "Password must be at least 8 characters long and contain at least one symbol, one number, one uppercase letter, and one lowercase letter";
    }
    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const onLogin = (e) => {
    e.preventDefault();
    signInWithEmailAndPassword(auth, formData.email, formData.password)
      .then((userCredential) => {
        // Signed in
        const user = userCredential.user;
        navigate("/home");
        localStorage.setItem("user_id", user.uid);
      })
      .catch((error) => {
        const errorCode = error.code;
        const errorMessage = error.message;
        console.log(errorCode, errorMessage);
      });
  };
  return (
    <div className="loginContainer">
      <form className="loginForm">
        <img
          src="https://s3.ap-south-1.amazonaws.com/greentiger.in-content/brand_icons/logo.png"
          alt="logo"
          style={{
            width: "90%",
            height: "20%",
            padding: "10px",
          }}
        />

        <div className="formGroup">
          <label>Email</label>
          <input
            type="email"
            name="email"
            id="email"
            value={formData.email}
            placeholder="Enter your email"
            required
            onChange={handleChange}
          />
          {errors.email && (
            <div className="error">{errors.email}</div>
          )}
        </div>

        <div className="formGroup">
          <label>Password</label>
          <input
            type="password"
            name="password"
            value={formData.password}
            placeholder="Enter your password"
            id="password"
            required
            onChange={handleChange}
          />
          {errors.password && <div className="error">{errors.password}</div>}
        </div>

        <button type="submit" onClick={onLogin}>
          Login
        </button>
      </form>
    </div>
  );
};
export default LoginPage;

